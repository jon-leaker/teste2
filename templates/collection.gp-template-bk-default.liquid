<!-- /templates/collection.liquid -->
{% comment %}

For more information on collection tags:
- http://docs.shopify.com/themes/liquid-variables/collection

{% endcomment %}

{% include 'collection-nav' %}


{% paginate collection.products by 12 %}
{% comment %}
{% include 'breadcrumb' %}
{% endcomment %}
{% comment %}
Use .grid--rev so that the collection tags appear below the products on mobile
{% endcomment %}
<div class="grid--rev">
  <div class="grid__item large--four-quarters">

    {% comment %}
    Different markup if a collection description exists
    {% endcomment %}

    <header class="section-header">

      <div class="section-header__right">
        {% include 'collection-sorting' %}
      </div>
    </header>


    {% comment %}
    Use class grid-uniform to have evenly sized columns clear
    each other properly at each breakpoint.
    {% endcomment %}
    <div class="grid-uniform wpf_wrapper">

      {% comment %}
      Loop through our products in the current collection.
      See the snippet 'product-grid-item' for the layout.
      {% endcomment %}
      {% for product in collection.products %}

      {% assign grid_item_width = 'large--one-quarter medium--one-half' %}
      {% include 'wpf-product-grid-item' %}

      {% else %}

      {% if collection.handle == 'all' and current_tags == '' %}

      {% comment %}
      Add default products to help with onboarding for collections/all only
      {% endcomment %}
      {% unless emptyState %}
      {{ 'theme-onboarding.css' | global_asset_url | stylesheet_tag }}
      {% assign emptyState = true %}
      {% endunless %}
      {% include 'onboarding-empty-collection' %}

      {% else %}

      {% comment %}
      If collection exists but is empty, display message
      {% endcomment %}
      <div class="grid__item">
        <p>{{ 'collections.general.no_matches' | t }}</p>
      </div>

      {% endif %}

      {% endfor %}

    </div>

    {% if paginate.pages > 1 %}
    <hr>
    <div class="pagination">
      {{ paginate | default_pagination | replace: '&laquo; Previous', '&larr;' | replace: 'Next &raquo;', '&rarr;' }}
    </div>
    {% endif %}

  </div>


</div>

{% endpaginate %}
